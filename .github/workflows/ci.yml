name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: macos-latest
            target: "x86_64-apple-darwin"
            build: |
              npx node-gyp rebuild
              strip -x npm/*/*.node
          - host: windows-latest
            build: npx node-gyp rebuild
            target: "i686-pc-windows-msvc"

    name: stable - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: npm

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-build-${{ matrix.settings.target }}-node@16

      - name: "Install dependencies"
        run: npm ci --ignore-scripts

      - name: "Build"
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: "npm/*/*.node"
          if-no-files-found: error

  test-bindings:
    name: Test bindings on ${{ matrix.settings.target }} - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: "x86_64-apple-darwin"
          - host: windows-latest
            target: "x86_64-pc-windows-msvc"
        node: ["16"]
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: npm

      - name: Install dependencies
        run: npm install --ignore-scripts

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: .

      - name: Test bindings
        run: |
          npm test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - test-bindings
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: npm

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-ubuntu-latest-publish-${{ hashFiles('package-lock.json') }}

      - name: "Install dependencies"
        run: npm install --ignore-scripts

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish
        run: |
          npm publish npm/win32-ia32
          npm publish npm/darwin-x64
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
